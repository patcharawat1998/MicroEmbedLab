CCS PCM C Compiler, Version 5.074, 32906               13-Feb-18 20:27

               Filename:   K:\Github\MicroEmbedLab\Lab1\1.2.3.lst

               ROM used:   269 words (3%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           13 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0B4
0003:  NOP
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
0004:  DATA D0,3A
0005:  DATA 73,34
0006:  DATA A0,16
0007:  DATA A0,12
0008:  DATA F5,06
0009:  DATA 0A,00
000A:  MOVF   0B,W
000B:  MOVWF  25
000C:  BCF    0B.7
000D:  BSF    03.5
000E:  BSF    03.6
000F:  BSF    0C.7
0010:  BSF    0C.0
0011:  NOP
0012:  NOP
0013:  BCF    03.5
0014:  BCF    03.6
0015:  BTFSC  25.7
0016:  BSF    0B.7
0017:  BTFSC  03.0
0018:  GOTO   042
0019:  BSF    03.6
001A:  MOVF   0C,W
001B:  ANDLW  7F
001C:  BCF    03.6
001D:  MOVWF  25
001E:  BSF    03.6
001F:  MOVF   0D,W
0020:  BCF    03.6
0021:  MOVWF  26
0022:  BSF    03.6
0023:  MOVF   0F,W
0024:  BCF    03.6
0025:  MOVWF  27
0026:  MOVF   25,W
0027:  BTFSS  0C.4
0028:  GOTO   027
0029:  MOVWF  19
002A:  MOVF   26,W
002B:  BSF    03.6
002C:  MOVWF  0D
002D:  BCF    03.6
002E:  MOVF   27,W
002F:  BSF    03.6
0030:  MOVWF  0F
0031:  BCF    03.6
0032:  MOVF   0B,W
0033:  MOVWF  28
0034:  BCF    0B.7
0035:  BSF    03.5
0036:  BSF    03.6
0037:  BSF    0C.7
0038:  BSF    0C.0
0039:  NOP
003A:  NOP
003B:  BCF    03.5
003C:  BCF    03.6
003D:  BTFSC  28.7
003E:  BSF    0B.7
003F:  DECFSZ 24,F
0040:  GOTO   042
0041:  GOTO   062
0042:  BSF    03.6
0043:  RLF    0C,W
0044:  RLF    0E,W
0045:  ANDLW  7F
0046:  BCF    03.6
0047:  MOVWF  25
0048:  BSF    03.6
0049:  MOVF   0D,W
004A:  BCF    03.6
004B:  MOVWF  26
004C:  BSF    03.6
004D:  MOVF   0F,W
004E:  BCF    03.6
004F:  MOVWF  27
0050:  MOVF   25,W
0051:  BTFSS  0C.4
0052:  GOTO   051
0053:  MOVWF  19
0054:  MOVF   26,W
0055:  BSF    03.6
0056:  MOVWF  0D
0057:  BCF    03.6
0058:  MOVF   27,W
0059:  BSF    03.6
005A:  MOVWF  0F
005B:  INCF   0D,F
005C:  BTFSC  03.2
005D:  INCF   0F,F
005E:  BCF    03.0
005F:  BCF    03.6
0060:  DECFSZ 24,F
0061:  GOTO   00A
0062:  BCF    0A.3
0063:  BCF    0A.4
0064:  GOTO   0F7 (RETURN)
0065:  MOVF   27,W
0066:  CLRF   78
0067:  SUBWF  26,W
0068:  BTFSC  03.0
0069:  GOTO   06D
006A:  MOVF   26,W
006B:  MOVWF  77
006C:  GOTO   079
006D:  CLRF   77
006E:  MOVLW  08
006F:  MOVWF  28
0070:  RLF    26,F
0071:  RLF    77,F
0072:  MOVF   27,W
0073:  SUBWF  77,W
0074:  BTFSC  03.0
0075:  MOVWF  77
0076:  RLF    78,F
0077:  DECFSZ 28,F
0078:  GOTO   070
0079:  RETURN
007A:  MOVF   78,W
007B:  MOVF   24,W
007C:  MOVWF  26
007D:  MOVLW  64
007E:  MOVWF  27
007F:  CALL   065
0080:  MOVF   77,W
0081:  MOVWF  24
0082:  MOVF   78,W
0083:  MOVLW  30
0084:  BTFSS  03.2
0085:  GOTO   08D
0086:  BTFSS  25.1
0087:  GOTO   095
0088:  BTFSC  25.3
0089:  GOTO   095
008A:  BTFSC  25.4
008B:  MOVLW  20
008C:  GOTO   090
008D:  BCF    25.3
008E:  BCF    25.4
008F:  BSF    25.0
0090:  ADDWF  78,F
0091:  MOVF   78,W
0092:  BTFSS  0C.4
0093:  GOTO   092
0094:  MOVWF  19
0095:  MOVF   24,W
0096:  MOVWF  26
0097:  MOVLW  0A
0098:  MOVWF  27
0099:  CALL   065
009A:  MOVF   77,W
009B:  MOVWF  24
009C:  MOVF   78,W
009D:  MOVLW  30
009E:  BTFSS  03.2
009F:  GOTO   0A6
00A0:  BTFSC  25.3
00A1:  GOTO   0AB
00A2:  BTFSS  25.0
00A3:  GOTO   0AB
00A4:  BTFSC  25.4
00A5:  MOVLW  20
00A6:  ADDWF  78,F
00A7:  MOVF   78,W
00A8:  BTFSS  0C.4
00A9:  GOTO   0A8
00AA:  MOVWF  19
00AB:  MOVLW  30
00AC:  ADDWF  24,F
00AD:  MOVF   24,W
00AE:  BTFSS  0C.4
00AF:  GOTO   0AE
00B0:  MOVWF  19
00B1:  BCF    0A.3
00B2:  BCF    0A.4
00B3:  GOTO   0FC (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=10 *=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOMCLR                   //Master Clear pin not enabled 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES BROWNOUT                 //Brownout reset 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES BORV40                   //Brownout reset at 4.0V 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
.................... #FUSES INTRC_IO  
....................  
.................... #use delay(clock=8M) 
....................  
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... #define RUN_BUTTON   PIN_B7 
....................  
.................... void main() 
00B4:  MOVF   03,W
00B5:  ANDLW  1F
00B6:  MOVWF  03
00B7:  MOVLW  71
00B8:  BSF    03.5
00B9:  MOVWF  0F
00BA:  CLRF   10
00BB:  MOVF   0F,W
00BC:  BSF    03.6
00BD:  BCF    07.3
00BE:  MOVLW  0C
00BF:  BCF    03.6
00C0:  MOVWF  19
00C1:  MOVLW  A2
00C2:  MOVWF  18
00C3:  MOVLW  90
00C4:  BCF    03.5
00C5:  MOVWF  18
00C6:  BSF    03.5
00C7:  BSF    03.6
00C8:  MOVF   09,W
00C9:  ANDLW  C0
00CA:  MOVWF  09
00CB:  BCF    03.6
00CC:  BCF    1F.4
00CD:  BCF    1F.5
00CE:  MOVLW  00
00CF:  BSF    03.6
00D0:  MOVWF  08
00D1:  BCF    03.5
00D2:  CLRF   07
00D3:  CLRF   08
00D4:  CLRF   09
00D5:  BCF    03.7
00D6:  BCF    03.6
00D7:  BCF    21.0
00D8:  MOVLW  01
00D9:  MOVWF  22
.................... { 
....................    int1 pushed=false; 
....................    int i=1; 
....................  
....................    while(1) { 
....................        
....................        if (!input(PIN_B7)) {    
00DA:  BSF    03.5
00DB:  BSF    06.7
00DC:  BCF    03.5
00DD:  BTFSC  06.7
00DE:  GOTO   106
....................         // actions for logic high 
....................         output_high(PIN_B5); 
00DF:  BSF    03.5
00E0:  BCF    06.5
00E1:  BCF    03.5
00E2:  BSF    06.5
....................         if(!pushed && !input(PIN_B7)){ 
00E3:  BTFSC  21.0
00E4:  GOTO   105
00E5:  BSF    03.5
00E6:  BSF    06.7
00E7:  BCF    03.5
00E8:  BTFSC  06.7
00E9:  GOTO   105
....................           printf("Push - %u\r\n", i++); 
00EA:  MOVF   22,W
00EB:  INCF   22,F
00EC:  MOVWF  23
00ED:  MOVLW  04
00EE:  BSF    03.6
00EF:  MOVWF  0D
00F0:  MOVLW  00
00F1:  MOVWF  0F
00F2:  BCF    03.0
00F3:  MOVLW  07
00F4:  BCF    03.6
00F5:  MOVWF  24
00F6:  GOTO   00A
00F7:  MOVF   23,W
00F8:  MOVWF  24
00F9:  MOVLW  1B
00FA:  MOVWF  25
00FB:  GOTO   07A
00FC:  MOVLW  0D
00FD:  BTFSS  0C.4
00FE:  GOTO   0FD
00FF:  MOVWF  19
0100:  MOVLW  0A
0101:  BTFSS  0C.4
0102:  GOTO   101
0103:  MOVWF  19
....................           pushed=true; 
0104:  BSF    21.0
....................         } 
....................       } else { 
0105:  GOTO   10B
....................        // actions for logic low 
....................        pushed=false; 
0106:  BCF    21.0
....................        output_low(PIN_B5); 
0107:  BSF    03.5
0108:  BCF    06.5
0109:  BCF    03.5
010A:  BCF    06.5
....................       } 
010B:  GOTO   0DA
....................        
....................        
....................    } 
....................  
....................  
.................... } 
010C:  SLEEP

Configuration Fuses:
   Word  1: 2FC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
