#include <16F886.h>
#device ADC=10 *=16

#FUSES NOWDT //No Watch Dog Timer
#FUSES PUT //Power Up Timer
#FUSES NOMCLR //Master Clear pin not enabled
#FUSES NOPROTECT //Code not protected from reading
#FUSES NOCPD //No EE protection
#FUSES BROWNOUT //Brownout reset
#FUSES IESO //Internal External Switch Over mode enabled
#FUSES FCMEN //Fail-safe clock monitor enabled
#FUSES NOLVP //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O
#FUSES NODEBUG //No Debug mode for ICD
#FUSES NOWRT //Program memory not write protected
#FUSES BORV40 //Brodddddwnout reset at 4.0V
#FUSES RESERVED //Used to set the reserved FUSE bits
#FUSES INTRC_IO 

#use delay(clock=8M)

#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8)

#use i2c(MASTER, I2C1, FORCE_HW) // configure the i2c port
#define SLAVE_ADDRESS  0xB0



int16 C = 65298,CSH = 65311,D = 65324,EB = 65336,E = 65347,F = 65358,FSH = 65368,G = 65377,GSH = 65386,A = 65394,Bb = 65402,B = 65410;
int16 note[25];



int count_note = 1 ;

#INT_TIMER1
void timer1_isr() {

set_timer1(note[count_note]); // ?????????????? ISR ???? ?????????????????????

//if (input(PIN_B5)) {  output_low(PIN_B5); }
//else { output_high(PIN_B5);}
output_toggle(PIN_B5);
}


void main() {

   note[1] = E;
note[2] = E;
note[3] = E;
note[4] = E;
note[5] = E;
note[6] = E;
note[7] = E;
note[8] = G;
note[9] = C;
note[10] = D;
note[11] = E;
note[12] = F;
note[13] = F;
note[14] = F;
note[15] = F;
note[16] = F;
note[17] = E;
note[18] = E;
note[19] = E;
note[20] = D;
note[21] = D;
note[22] = E;
note[23] = D;
note[24] = G;

   setup_timer_1(T1_INTERNAL | T1_DIV_BY_8);
   //set_timer1(note[1]); 
   //delay_ms(750);
   count_note++;
   enable_interrupts(INT_TIMER1);
   enable_interrupts(GLOBAL);
   
   while (1) {
   
      set_timer1(note[count_note]);
      delay_ms(600);
      if(count_note==3|count_note==6|count_note==18|count_note==23|count_note==24){ 
         delay_ms(500);
      }
      if(count_node==11) delay_ms(1000);
      count_note++;
      if(count_note == 24) {
      count_note = 1;
      delay_ms(500);
      }
   }
   
   
}
