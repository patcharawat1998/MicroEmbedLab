CCS PCM C Compiler, Version 5.074, 32906               07-Feb-18 13:55

               Filename:   C:\Users\DONUT\Desktop\2_2560_Work\EMbedLab\Lab4\4.2\4.2.1test.lst

               ROM used:   133 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04E
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.3
0018:  GOTO   01B
0019:  BTFSC  0B.0
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
....................  
.................... #list 
....................  
.................... #device ADC=10 *=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOMCLR                   //Master Clear pin not enabled 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES BROWNOUT                 //Brownout reset 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES BORV40                   //Brownout reset at 4.0V 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
.................... #FUSES INTRC_IO  
....................  
.................... #use delay(clock=8M) 
*
0038:  MOVLW  28
0039:  MOVWF  04
003A:  BCF    03.7
003B:  MOVF   00,W
003C:  BTFSC  03.2
003D:  GOTO   04B
003E:  MOVLW  02
003F:  MOVWF  78
0040:  CLRF   77
0041:  DECFSZ 77,F
0042:  GOTO   041
0043:  DECFSZ 78,F
0044:  GOTO   040
0045:  MOVLW  97
0046:  MOVWF  77
0047:  DECFSZ 77,F
0048:  GOTO   047
0049:  DECFSZ 00,F
004A:  GOTO   03E
004B:  BCF    0A.3
004C:  BCF    0A.4
004D:  GOTO   081 (RETURN)
....................  
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... #define RUN_BUTTON   PIN_B7 
....................  
....................  
....................  
.................... /*#INT_TIMER1 
.................... void timer1_isr() { 
....................    set_timer1(65036); // re-set the timer1 counter to maintain a stable period 
....................     
....................  
.................... }*/ 
....................  
.................... #INT_RB 
.................... void rb_isr(void) { 
....................  
.................... output_toggle(PIN_B6); 
*
002F:  BSF    03.5
0030:  BCF    06.6
0031:  MOVLW  40
0032:  BCF    03.5
0033:  XORWF  06,F
....................  
0034:  BCF    0B.0
0035:  BCF    0A.3
0036:  BCF    0A.4
0037:  GOTO   01B
.................... } 
....................  
....................  
....................  
.................... void main() 
*
004E:  MOVF   03,W
004F:  ANDLW  1F
0050:  MOVWF  03
0051:  MOVLW  71
0052:  BSF    03.5
0053:  MOVWF  0F
0054:  CLRF   10
0055:  MOVF   0F,W
0056:  BSF    03.6
0057:  BCF    07.3
0058:  MOVLW  0C
0059:  BCF    03.6
005A:  MOVWF  19
005B:  MOVLW  A2
005C:  MOVWF  18
005D:  MOVLW  90
005E:  BCF    03.5
005F:  MOVWF  18
0060:  BSF    03.5
0061:  BSF    03.6
0062:  MOVF   09,W
0063:  ANDLW  C0
0064:  MOVWF  09
0065:  BCF    03.6
0066:  BCF    1F.4
0067:  BCF    1F.5
0068:  MOVLW  00
0069:  BSF    03.6
006A:  MOVWF  08
006B:  BCF    03.5
006C:  CLRF   07
006D:  CLRF   08
006E:  CLRF   09
006F:  BCF    03.7
.................... { 
....................     
....................    /*setup_timer_1(T1_INTERNAL | T1_DIV_BY_8); 
....................    set_timer1(65036); 
....................    enable_interrupts(INT_TIMER1); 
....................    enable_interrupts(GLOBAL);*/ 
....................        
....................    enable_interrupts(INT_RB7);    // generate interrupt when B7 changes 
0070:  BCF    03.6
0071:  BSF    0B.3
0072:  BSF    03.5
0073:  BSF    16.7
....................    enable_interrupts(GLOBAL); 
0074:  MOVLW  C0
0075:  BCF    03.5
0076:  IORWF  0B,F
....................  
....................    while(1) { 
....................        
....................        
....................           
....................          output_toggle(PIN_B6); 
0077:  BSF    03.5
0078:  BCF    06.6
0079:  MOVLW  40
007A:  BCF    03.5
007B:  XORWF  06,F
....................          delay_ms(1000); 
007C:  MOVLW  04
007D:  MOVWF  27
007E:  MOVLW  FA
007F:  MOVWF  28
0080:  GOTO   038
0081:  DECFSZ 27,F
0082:  GOTO   07E
0083:  GOTO   077
....................        
....................  
....................  
....................    } 
....................  
....................  
.................... } 
0084:  SLEEP

Configuration Fuses:
   Word  1: 2FC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
