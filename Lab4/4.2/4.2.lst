CCS PCM C Compiler, Version 5.074, 32906               07-Feb-18 13:34

               Filename:   C:\Users\DONUT\Desktop\2_2560_Work\EMbedLab\Lab4\4.2\4.2.lst

               ROM used:   93 words (1%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           12 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   033
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.3
0018:  GOTO   01B
0019:  BTFSC  0B.0
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
....................  
.................... #list 
....................  
.................... #device ADC=10 *=16 
....................  
.................... #FUSES NOWDT //No Watch Dog Timer 
.................... #FUSES PUT //Power Up Timer 
.................... #FUSES NOMCLR //Master Clear pin not enabled 
.................... #FUSES NOPROTECT //Code not protected from reading 
.................... #FUSES NOCPD //No EE protection 
.................... #FUSES BROWNOUT //Brownout reset 
.................... #FUSES IESO //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN //Fail-safe clock monitor enabled 
.................... #FUSES NOLVP //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG //No Debug mode for ICD 
.................... #FUSES NOWRT //Program memory not write protected 
.................... #FUSES BORV40 //Brodddddwnout reset at 4.0V 
.................... #FUSES RESERVED //Used to set the reserved FUSE bits 
.................... #FUSES INTRC_IO  
....................  
.................... #use delay(clock=8M) 
....................  
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... #INT_RB 
.................... void rb_isr(void) { 
....................     
002F:  BCF    0B.0
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   01B
.................... } 
....................  
.................... void main() { 
0033:  MOVF   03,W
0034:  ANDLW  1F
0035:  MOVWF  03
0036:  MOVLW  71
0037:  BSF    03.5
0038:  MOVWF  0F
0039:  CLRF   10
003A:  MOVF   0F,W
003B:  BSF    03.6
003C:  BCF    07.3
003D:  MOVLW  0C
003E:  BCF    03.6
003F:  MOVWF  19
0040:  MOVLW  A2
0041:  MOVWF  18
0042:  MOVLW  90
0043:  BCF    03.5
0044:  MOVWF  18
0045:  BSF    03.5
0046:  BSF    03.6
0047:  MOVF   09,W
0048:  ANDLW  C0
0049:  MOVWF  09
004A:  BCF    03.6
004B:  BCF    1F.4
004C:  BCF    1F.5
004D:  MOVLW  00
004E:  BSF    03.6
004F:  MOVWF  08
0050:  BCF    03.5
0051:  CLRF   07
0052:  CLRF   08
0053:  CLRF   09
0054:  BCF    03.7
....................  
....................      
....................     enable_interrupts(INT_RB7);    // generate interrupt when B7 changes 
0055:  BCF    03.6
0056:  BSF    0B.3
0057:  BSF    03.5
0058:  BSF    16.7
....................     enable_interrupts(GLOBAL); 
0059:  MOVLW  C0
005A:  BCF    03.5
005B:  IORWF  0B,F
.................... } 
005C:  SLEEP

Configuration Fuses:
   Word  1: 2FC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
