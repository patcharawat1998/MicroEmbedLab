CCS PCM C Compiler, Version 5.074, 32906               14-Feb-18 09:36

               Filename:   K:\Github\MicroEmbedLab\Lab5\5.3.lst

               ROM used:   240 words (3%)
                           Largest free fragment is 2048
               RAM used:   17 (5%) at main() level
                           27 (7%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0B9
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
*
0045:  MOVLW  8E
0046:  MOVWF  77
0047:  MOVF   2D,W
0048:  MOVWF  78
0049:  MOVF   2C,W
004A:  MOVWF  79
004B:  CLRF   7A
004C:  MOVF   78,F
004D:  BTFSS  03.2
004E:  GOTO   059
004F:  MOVF   79,W
0050:  MOVWF  78
0051:  CLRF   79
0052:  MOVLW  08
0053:  SUBWF  77,F
0054:  MOVF   78,F
0055:  BTFSS  03.2
0056:  GOTO   059
0057:  CLRF   77
0058:  GOTO   061
0059:  BCF    03.0
005A:  BTFSC  78.7
005B:  GOTO   060
005C:  RLF    79,F
005D:  RLF    78,F
005E:  DECF   77,F
005F:  GOTO   059
0060:  BCF    78.7
*
0071:  MOVF   2D,W
0072:  MOVWF  34
0073:  MOVF   31,W
0074:  XORWF  34,F
0075:  BTFSS  34.7
0076:  GOTO   07C
0077:  BCF    03.2
0078:  BCF    03.0
0079:  BTFSC  2D.7
007A:  BSF    03.0
007B:  GOTO   0AF
007C:  MOVF   2D,W
007D:  MOVWF  34
007E:  MOVF   30,W
007F:  MOVWF  35
0080:  MOVF   2C,W
0081:  SUBWF  35,F
0082:  BTFSC  03.2
0083:  GOTO   08A
0084:  BTFSS  34.7
0085:  GOTO   0AF
0086:  MOVF   03,W
0087:  XORLW  01
0088:  MOVWF  03
0089:  GOTO   0AF
008A:  MOVF   31,W
008B:  MOVWF  35
008C:  MOVF   2D,W
008D:  SUBWF  35,F
008E:  BTFSC  03.2
008F:  GOTO   096
0090:  BTFSS  34.7
0091:  GOTO   0AF
0092:  MOVF   03,W
0093:  XORLW  01
0094:  MOVWF  03
0095:  GOTO   0AF
0096:  MOVF   32,W
0097:  MOVWF  35
0098:  MOVF   2E,W
0099:  SUBWF  35,F
009A:  BTFSC  03.2
009B:  GOTO   0A2
009C:  BTFSS  34.7
009D:  GOTO   0AF
009E:  MOVF   03,W
009F:  XORLW  01
00A0:  MOVWF  03
00A1:  GOTO   0AF
00A2:  MOVF   33,W
00A3:  MOVWF  35
00A4:  MOVF   2F,W
00A5:  SUBWF  35,F
00A6:  BTFSC  03.2
00A7:  GOTO   0AE
00A8:  BTFSS  34.7
00A9:  GOTO   0AF
00AA:  MOVF   03,W
00AB:  XORLW  01
00AC:  MOVWF  03
00AD:  GOTO   0AF
00AE:  BCF    03.0
....................  
.................... #list 
....................  
.................... #device ADC=10 *=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOMCLR                   //Master Clear pin not enabled 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES BROWNOUT                 //Brownout reset 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES BORV40                   //Brownout reset at 4.0V 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
.................... #FUSES INTRC_IO  
....................  
.................... #use delay(clock=8M) 
....................  
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... //#define RUN_BUTTON   PIN_B7 
....................  
.................... int counter = 0; 
.................... float duty =2; 
.................... #INT_TIMER1 
.................... void timer1_isr(void) { 
....................    set_timer1(65411); 
*
0031:  CLRF   0E
0032:  MOVLW  FF
0033:  MOVWF  0F
0034:  MOVLW  83
0035:  MOVWF  0E
....................    counter++; 
0036:  INCF   27,F
....................    if (counter >= 10) { counter = 0;}  
0037:  MOVF   27,W
0038:  SUBLW  09
0039:  BTFSS  03.0
003A:  CLRF   27
....................    If (counter == 0) { output_high(PIN_B4);}  // beginning of a new period 
003B:  MOVF   27,F
003C:  BTFSS  03.2
003D:  GOTO   042
003E:  BSF    03.5
003F:  BCF    06.4
0040:  BCF    03.5
0041:  BSF    06.4
....................    If (counter ==duty) {output_low(PIN_B4);}   
0042:  CLRF   2D
0043:  MOVF   27,W
0044:  MOVWF  2C
*
0061:  MOVF   7A,W
0062:  MOVWF  2F
0063:  MOVF   79,W
0064:  MOVWF  2E
0065:  MOVF   78,W
0066:  MOVWF  2D
0067:  MOVF   77,W
0068:  MOVWF  2C
0069:  MOVF   2B,W
006A:  MOVWF  33
006B:  MOVF   2A,W
006C:  MOVWF  32
006D:  MOVF   29,W
006E:  MOVWF  31
006F:  MOVF   28,W
0070:  MOVWF  30
*
00AF:  BTFSS  03.2
00B0:  GOTO   0B5
00B1:  BSF    03.5
00B2:  BCF    06.4
00B3:  BCF    03.5
00B4:  BCF    06.4
00B5:  BCF    0C.0
00B6:  BCF    0A.3
00B7:  BCF    0A.4
00B8:  GOTO   01D
.................... } 
....................  
....................  
.................... void main () { 
00B9:  MOVF   03,W
00BA:  ANDLW  1F
00BB:  MOVWF  03
00BC:  MOVLW  71
00BD:  BSF    03.5
00BE:  MOVWF  0F
00BF:  CLRF   10
00C0:  MOVF   0F,W
00C1:  BSF    03.6
00C2:  BCF    07.3
00C3:  MOVLW  0C
00C4:  BCF    03.6
00C5:  MOVWF  19
00C6:  MOVLW  A2
00C7:  MOVWF  18
00C8:  MOVLW  90
00C9:  BCF    03.5
00CA:  MOVWF  18
00CB:  CLRF   27
00CC:  CLRF   2B
00CD:  CLRF   2A
00CE:  CLRF   29
00CF:  MOVLW  80
00D0:  MOVWF  28
00D1:  BSF    03.5
00D2:  BSF    03.6
00D3:  MOVF   09,W
00D4:  ANDLW  C0
00D5:  MOVWF  09
00D6:  BCF    03.6
00D7:  BCF    1F.4
00D8:  BCF    1F.5
00D9:  MOVLW  00
00DA:  BSF    03.6
00DB:  MOVWF  08
00DC:  BCF    03.5
00DD:  CLRF   07
00DE:  CLRF   08
00DF:  CLRF   09
00E0:  BCF    03.7
....................  
....................  
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_8); 
00E1:  MOVLW  35
00E2:  BCF    03.6
00E3:  MOVWF  10
....................    set_timer1(65411); 
00E4:  CLRF   0E
00E5:  MOVLW  FF
00E6:  MOVWF  0F
00E7:  MOVLW  83
00E8:  MOVWF  0E
....................    enable_interrupts(INT_TIMER1);    // generate interrupt when B7 changes 
00E9:  BSF    03.5
00EA:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
00EB:  MOVLW  C0
00EC:  BCF    03.5
00ED:  IORWF  0B,F
....................   // enable_interrupts(INT_RB7); 
....................  
....................     
....................    while(1){ 
00EE:  GOTO   0EE
....................     
.................... //!      if(!input(PIN_B7)){ 
.................... //!         duty+=0.5; 
.................... //!         if(duty>2.0){ 
.................... //!            duty=1; 
.................... //!         } 
.................... //!         while(!input(PIN_B7)){ 
.................... //!            delay_ms(1); 
.................... //!         } 
.................... //!      }  
....................    } 
.................... } 
....................  
00EF:  SLEEP
....................  

Configuration Fuses:
   Word  1: 2FC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
