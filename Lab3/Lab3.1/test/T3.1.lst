CCS PCM C Compiler, Version 5.074, 32906               31-Á.¤.-18 14:11

               Filename:   C:\Users\DONUT\Desktop\EMbedLab\Lab3\Lab3.1\test\T3.1.lst

               ROM used:   178 words (2%)
                           Largest free fragment is 2048
               RAM used:   10 (3%) at main() level
                           11 (3%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   02A
0003:  NOP
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
....................  
.................... #list 
....................  
.................... #device ADC=10 *=16 
....................  
.................... #FUSES NOWDT //No Watch Dog Timer 
.................... #FUSES PUT //Power Up Timer 
.................... #FUSES NOMCLR //Master Clear pin not enabled 
.................... #FUSES NOPROTECT //Code not protected from reading 
.................... #FUSES NOCPD //No EE protection 
.................... #FUSES BROWNOUT //Brownout reset 
.................... #FUSES IESO //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN //Fail-safe clock monitor enabled 
.................... #FUSES NOLVP //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG //No Debug mode for ICD 
.................... #FUSES NOWRT //Program memory not write protected 
.................... #FUSES BORV40 //Brodddddwnout reset at 4.0V 
.................... #FUSES RESERVED //Used to set the reserved FUSE bits 
.................... #FUSES INTRC_IO  
....................  
.................... #use delay(clock=8M) 
*
0014:  MOVLW  24
0015:  MOVWF  04
0016:  BCF    03.7
0017:  MOVF   00,W
0018:  BTFSC  03.2
0019:  GOTO   027
001A:  MOVLW  02
001B:  MOVWF  78
001C:  CLRF   77
001D:  DECFSZ 77,F
001E:  GOTO   01D
001F:  DECFSZ 78,F
0020:  GOTO   01C
0021:  MOVLW  97
0022:  MOVWF  77
0023:  DECFSZ 77,F
0024:  GOTO   023
0025:  DECFSZ 00,F
0026:  GOTO   01A
0027:  BCF    0A.3
0028:  BCF    0A.4
0029:  GOTO   095 (RETURN)
....................  
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
.................... #use i2c(MASTER, I2C1, FORCE_HW) // configure the i2c port 
*
0004:  BCF    14.7
0005:  BCF    0C.3
0006:  MOVF   25,W
0007:  MOVWF  13
0008:  MOVLW  02
0009:  BTFSC  14.7
000A:  GOTO   012
000B:  BTFSS  0C.3
000C:  GOTO   00B
000D:  MOVLW  00
000E:  BSF    03.5
000F:  BTFSC  11.6
0010:  MOVLW  01
0011:  BCF    03.5
0012:  MOVWF  78
0013:  RETURN
....................  
.................... #define SLAVE_ADDRESS  0xB0 
.................... void main() { 
*
002A:  MOVF   03,W
002B:  ANDLW  1F
002C:  MOVWF  03
002D:  MOVLW  71
002E:  BSF    03.5
002F:  MOVWF  0F
0030:  CLRF   10
0031:  MOVF   0F,W
0032:  BSF    03.6
0033:  BCF    07.3
0034:  MOVLW  0C
0035:  BCF    03.6
0036:  MOVWF  19
0037:  MOVLW  A2
0038:  MOVWF  18
0039:  MOVLW  90
003A:  BCF    03.5
003B:  MOVWF  18
003C:  MOVLW  FF
003D:  MOVWF  20
003E:  BSF    20.3
003F:  MOVF   20,W
0040:  BSF    03.5
0041:  MOVWF  07
0042:  BCF    03.5
0043:  BSF    20.4
0044:  MOVF   20,W
0045:  BSF    03.5
0046:  MOVWF  07
0047:  MOVLW  13
0048:  MOVWF  13
0049:  MOVLW  28
004A:  BCF    03.5
004B:  MOVWF  14
004C:  BSF    03.5
004D:  BSF    14.7
004E:  BCF    14.6
004F:  BSF    03.6
0050:  MOVF   09,W
0051:  ANDLW  C0
0052:  MOVWF  09
0053:  BCF    03.6
0054:  BCF    1F.4
0055:  BCF    1F.5
0056:  MOVLW  00
0057:  BSF    03.6
0058:  MOVWF  08
0059:  BCF    03.5
005A:  CLRF   07
005B:  CLRF   08
005C:  CLRF   09
005D:  BCF    03.7
.................... //!   i2c_start(); //important 
.................... //!   i2c_write(SLAVE_ADDRESS); 
.................... //!   i2c_write(2);  // set register pointer to location 2 
.................... //!   i2c_write(0x00); // send high byte 
.................... //!   i2c_write(0x0F); // send low byte 
.................... //!   i2c_stop(); //important 
.................... //------------------------------------------------ 
....................  
.................... //!      for (int i=0;i<10;i++) { 
.................... //!       delay_ms(500); 
.................... //!       i2c_start(); 
.................... //!       i2c_write(SLAVE_ADDRESS); 
.................... //!       i2c_write(2); 
.................... //!       i2c_write(0); 
.................... //!       i2c_write(i); 
.................... //!       i2c_stop(); 
.................... //!        
.................... //!      } 
....................  
....................       for (int16 i=1;i<=9998;i++) { 
005E:  BCF    03.6
005F:  CLRF   22
0060:  MOVLW  01
0061:  MOVWF  21
0062:  MOVF   22,W
0063:  SUBLW  27
0064:  BTFSS  03.0
0065:  GOTO   0B1
0066:  BTFSS  03.2
0067:  GOTO   06C
0068:  MOVF   21,W
0069:  SUBLW  0E
006A:  BTFSS  03.0
006B:  GOTO   0B1
....................        //delay_ms(1); 
.................... //!       i2c_start(); 
.................... //!       i2c_write(SLAVE_ADDRESS); 
.................... //!       i2c_write(2); 
.................... //!       I2c_write(i >> 8);  // upper byte of 1000 
.................... //!       I2c_write(i & 0xFF); // lower byte of 1000 
....................  
....................           i2c_start(); 
006C:  BSF    03.5
006D:  BSF    11.0
006E:  BTFSC  11.0
006F:  GOTO   06E
....................           i2c_write(SLAVE_ADDRESS); 
0070:  MOVLW  B0
0071:  BCF    03.5
0072:  MOVWF  25
0073:  CALL   004
....................           i2c_write(2); 
0074:  MOVLW  02
0075:  MOVWF  25
0076:  CALL   004
....................           i2c_write(i >> 8); 
0077:  MOVF   22,W
0078:  MOVWF  23
0079:  CLRF   24
007A:  MOVF   22,W
007B:  MOVWF  25
007C:  CALL   004
....................           i2c_write(i & 0xFF); 
007D:  MOVF   21,W
007E:  MOVWF  23
007F:  CLRF   24
0080:  MOVF   21,W
0081:  MOVWF  25
0082:  CALL   004
....................           i2c_stop(); 
0083:  BSF    03.5
0084:  BSF    11.2
0085:  BTFSC  11.2
0086:  GOTO   085
....................          if(i==9998){ 
0087:  BCF    03.5
0088:  MOVF   21,W
0089:  SUBLW  0E
008A:  BTFSS  03.2
008B:  GOTO   0AD
008C:  MOVF   22,W
008D:  SUBLW  27
008E:  BTFSS  03.2
008F:  GOTO   0AD
....................           delay_ms(1000); 
0090:  MOVLW  04
0091:  MOVWF  23
0092:  MOVLW  FA
0093:  MOVWF  24
0094:  GOTO   014
0095:  DECFSZ 23,F
0096:  GOTO   092
....................           i2c_start(); 
0097:  BSF    03.5
0098:  BSF    11.0
0099:  BTFSC  11.0
009A:  GOTO   099
....................           i2c_write(SLAVE_ADDRESS); 
009B:  MOVLW  B0
009C:  BCF    03.5
009D:  MOVWF  25
009E:  CALL   004
....................           i2c_write(2); 
009F:  MOVLW  02
00A0:  MOVWF  25
00A1:  CALL   004
....................           I2c_write(0x27);  // upper byte of 1000 
00A2:  MOVLW  27
00A3:  MOVWF  25
00A4:  CALL   004
....................           I2c_write(0x0F); // lower byte of 1000 
00A5:  MOVLW  0F
00A6:  MOVWF  25
00A7:  CALL   004
....................           i2c_stop(); 
00A8:  BSF    03.5
00A9:  BSF    11.2
00AA:  BTFSC  11.2
00AB:  GOTO   0AA
00AC:  BCF    03.5
....................            
....................         
....................       
....................       } 
00AD:  INCF   21,F
00AE:  BTFSC  03.2
00AF:  INCF   22,F
00B0:  GOTO   062
....................        
....................      
.................... } 
.................... } 
....................  
00B1:  SLEEP

Configuration Fuses:
   Word  1: 2FC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
