CCS PCM C Compiler, Version 5.074, 32906               31-Á.¤.-18 16:15

               Filename:   C:\Users\DONUT\Desktop\EMbedLab\Lab3\Lab3.1\3.1.1.lst

               ROM used:   154 words (2%)
                           Largest free fragment is 2048
               RAM used:   10 (3%) at main() level
                           11 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   028
0003:  NOP
....................  
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
....................  
.................... #list 
....................  
....................  
.................... #device ADC=10 *=16 
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOMCLR                   //Master Clear pin not enabled 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES BROWNOUT                 //Brownout reset 
.................... #FUSES IESO                     //Internal External SWITCH Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used FOR I/O 
.................... #FUSES NODEBUG                  //No Debug mode FOR ICD 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES BORV40                   //Brownout reset at 4.0V 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
.................... #FUSES INTRC_IO  
.................... #use delay(clock=8M) 
0004:  MOVLW  24
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
.................... #define RUN_BUTTON   PIN_B7 
.................... #define SLAVE_ADDRESS  0xB0 
.................... #use i2c(MASTER, I2C1, FORCE_HW) // configure the i2c port 
0018:  BCF    14.7
0019:  BCF    0C.3
001A:  MOVF   25,W
001B:  MOVWF  13
001C:  MOVLW  02
001D:  BTFSC  14.7
001E:  GOTO   026
001F:  BTFSS  0C.3
0020:  GOTO   01F
0021:  MOVLW  00
0022:  BSF    03.5
0023:  BTFSC  11.6
0024:  MOVLW  01
0025:  BCF    03.5
0026:  MOVWF  78
0027:  RETURN
.................... void main() 
0028:  MOVF   03,W
0029:  ANDLW  1F
002A:  MOVWF  03
002B:  MOVLW  71
002C:  BSF    03.5
002D:  MOVWF  0F
002E:  CLRF   10
002F:  MOVF   0F,W
0030:  BSF    03.6
0031:  BCF    07.3
0032:  MOVLW  0C
0033:  BCF    03.6
0034:  MOVWF  19
0035:  MOVLW  A2
0036:  MOVWF  18
0037:  MOVLW  90
0038:  BCF    03.5
0039:  MOVWF  18
003A:  MOVLW  FF
003B:  MOVWF  20
003C:  BSF    20.3
003D:  MOVF   20,W
003E:  BSF    03.5
003F:  MOVWF  07
0040:  BCF    03.5
0041:  BSF    20.4
0042:  MOVF   20,W
0043:  BSF    03.5
0044:  MOVWF  07
0045:  MOVLW  13
0046:  MOVWF  13
0047:  MOVLW  28
0048:  BCF    03.5
0049:  MOVWF  14
004A:  BSF    03.5
004B:  BSF    14.7
004C:  BCF    14.6
004D:  BSF    03.6
004E:  MOVF   09,W
004F:  ANDLW  C0
0050:  MOVWF  09
0051:  BCF    03.6
0052:  BCF    1F.4
0053:  BCF    1F.5
0054:  MOVLW  00
0055:  BSF    03.6
0056:  MOVWF  08
0057:  BCF    03.5
0058:  CLRF   07
0059:  CLRF   08
005A:  CLRF   09
005B:  BCF    03.7
.................... { 
.................... int16 i; 
.................... delay_ms(1000); 
005C:  MOVLW  04
005D:  BCF    03.6
005E:  MOVWF  23
005F:  MOVLW  FA
0060:  MOVWF  24
0061:  CALL   004
0062:  DECFSZ 23,F
0063:  GOTO   05F
.................... for (i=9980;i<10000;i++) { 
0064:  MOVLW  26
0065:  MOVWF  22
0066:  MOVLW  FC
0067:  MOVWF  21
0068:  MOVF   22,W
0069:  SUBLW  27
006A:  BTFSS  03.0
006B:  GOTO   099
006C:  BTFSS  03.2
006D:  GOTO   072
006E:  MOVF   21,W
006F:  SUBLW  0F
0070:  BTFSS  03.0
0071:  GOTO   099
.................... delay_ms(500); 
0072:  MOVLW  02
0073:  MOVWF  23
0074:  MOVLW  FA
0075:  MOVWF  24
0076:  CALL   004
0077:  DECFSZ 23,F
0078:  GOTO   074
....................  i2c_start(); 
0079:  BSF    03.5
007A:  BSF    11.0
007B:  BTFSC  11.0
007C:  GOTO   07B
....................  i2c_write(SLAVE_ADDRESS); 
007D:  MOVLW  B0
007E:  BCF    03.5
007F:  MOVWF  25
0080:  CALL   018
....................  i2c_write(2);//register address 
0081:  MOVLW  02
0082:  MOVWF  25
0083:  CALL   018
....................  i2c_write(i >> 8);//high bit 
0084:  MOVF   22,W
0085:  MOVWF  23
0086:  CLRF   24
0087:  MOVF   22,W
0088:  MOVWF  25
0089:  CALL   018
....................  i2c_write(i & 0xFF);//low bit 
008A:  MOVF   21,W
008B:  MOVWF  23
008C:  CLRF   24
008D:  MOVF   21,W
008E:  MOVWF  25
008F:  CALL   018
....................  i2c_stop(); 
0090:  BSF    03.5
0091:  BSF    11.2
0092:  BTFSC  11.2
0093:  GOTO   092
0094:  BCF    03.5
0095:  INCF   21,F
0096:  BTFSC  03.2
0097:  INCF   22,F
0098:  GOTO   068
.................... } 
.................... } 
....................  
0099:  SLEEP

Configuration Fuses:
   Word  1: 2FC4   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
